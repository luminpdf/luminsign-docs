openapi: 3.0.0
info:
  version: 1.0.0
  title: Lumin API Reference
  description: |
    The Lumin API Reference provides a comprehensive set of tools to integrate document workflows — including editing, eSignatures, and automation — into your applications.

    Useful links:
    - [Document Repository](https://github.com/luminpdf/luminsign-docs)
    - [API Definition](https://github.com/luminpdf/luminsign-docs/blob/main/openapi.yaml)
    - [Authentication Guide](/docs/api/authentication/)
  termsOfService: https://www.luminpdf.com/terms-of-use/
  contact:
    name: API Support
    email: integration@luminpdf.com
    url: https://help.luminpdf.com
servers:
  - url: https://api.luminpdf.com/v1
    description: Production server
  - url: https://api-sandbox.luminpdf.com/v1
    description: Sandbox server
tags:
  - name: Signature Request
    description: Everything about Signature Request
  - name: User
    description: Everything about User
  - name: Template
    description: Everything about Template
paths:
  /signature_request/{signature_request_id}:
    get:
      summary: Get Signature Request
      description: Get Signature Request by id.
      security:
        - ApiKey: []
        - BearerAuth: []
      tags:
        - Signature Request
      parameters:
        - in: path
          name: signature_request_id
          schema:
            type: string
          required: true
          description: ID of the Signature Request to get
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: object
                required:
                  - signature_request
                properties:
                  signature_request:
                    description: Contains information about a Signature Request.
                    $ref: '#/components/schemas/SignatureRequest'
        '4xx':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /signature_request/send:
    post:
      summary: Send Signature Request
      description: Creates and sends a new Signature Request with the submitted documents.
      security:
        - ApiKey: []
        - BearerAuth: []
      tags:
        - Signature Request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestDTO'
      responses:
        '201':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: object
                required:
                  - signature_request
                properties:
                  signature_request:
                    description: Contains information about a Signature Request.
                    required:
                      - signature_request_id
                      - created_at
                      - status
                    properties:
                      signature_request_id:
                        type: string
                        description: The unique identifier for the Signature Request.
                      created_at:
                        type: string
                        description: The time the Signature Request was created.
                      status:
                        type: string
                        description: The status of the Signature Request.
                        enum:
                          - WAITING_FOR_PROCESSING
                          - FAILED
        '4xx':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /signature_request/cancel/{signature_request_id}:
    put:
      summary: Cancel Signature Request
      description: Cancel Signature Request by id.
      security:
        - ApiKey: []
        - BearerAuth: []
      tags:
        - Signature Request
      parameters:
        - in: path
          name: signature_request_id
          schema:
            type: string
          required: true
          description: ID of the Signature Request to cancel
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature_request_id:
                    type: string
                    description: The unique identifier for the Signature Request.
                  status:
                    type: string
                    description: The status of the Signature Request.
                    enum:
                      - CANCELLED
        '4xx':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /signature_request/files_as_file_url/{signature_request_id}:
    get:
      summary: Download File as File URL
      description: Obtain the file of the Signature Request by id as a file URL. Returns a JSON object with a url to the file
      security:
        - ApiKey: []
        - BearerAuth: []
      tags:
        - Signature Request
      parameters:
        - in: path
          name: signature_request_id
          schema:
            type: string
          required: true
          description: ID of the Signature Request to get
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_url:
                    type: string
                    description: Signed HTTPS URL to download the document. Expires in 30 minutes.
                  expires_at:
                    type: integer
                    format: unix-epoch
                    description: Unix epoch timestamp **in seconds** when the signed URL expires.
        '4xx':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /signature_request/files/{signature_request_id}:
    get:
      summary: Download File
      description: Obtain the file of the Signature Request by id. Returns a PDF file.
      security:
        - ApiKey: []
        - BearerAuth: []
      tags:
        - Signature Request
      parameters:
        - in: path
          name: signature_request_id
          schema:
            type: string
          required: true
          description: ID of the Signature Request to get
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '4xx':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/info:
    get:
      summary: Get User Information
      description: Get information of current user by API Key
      security:
        - ApiKey: []
        - BearerAuth: []
      tags:
        - User
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: object
                required:
                  - user
                properties:
                  user:
                    description: Contains information about a User.
                    $ref: '#/components/schemas/User'
        '4xx':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /templates:
    get: 
      summary: List Templates
      description: Returns a paginated list of Lumin templates with essential details embedded for each item.
      security:
        - ApiKey: []
        - BearerAuth: []
      tags:
        - Template
      parameters:
        - name: page
          in: query
          description: Specify which page of the dataset to return (min = 1).
          schema:
            type: integer
            minimum: 1
          required: false
        - name: limit
          in: query
          description: The number of templates to return per page. One of 10, 25, or 50.
          schema:
            type: integer
            enum: [10, 25, 50]
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateListResponse"
              example:
                page: 1
                limit: 25
                total_count: 1
                data:
                  - template_id: sign_123
                    name: Mutual NDA
                    signing_type: ORDER
                    signer_roles:
                      - name: Tenant
                        group: 1
                      - name: Customer
                        group: 2
                    fields:
                      - name: CustomerName
                        type: text
                        is_required: true
                      - name: HasCompleted
                        type: checkbox
                        is_required: true
                    tags:
                      - name: ClientName
                        type: merge_tag
                        is_required: true
                      - name: EffectiveDate
                        type: merge_tag
                        is_required: true
                    created_at: 1748456885430
                    updated_at: 1748456885430
        '4xx':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /templates/{template_id}/generate-document:
    post:
      summary: Generate Document from Template
      description: |
        Generates a downloadable PDF document from a specified Lumin template.

        This endpoint takes an existing template identified by `template_id` and produces a static document based on its content and structure.  

        Currently, this operation supports **Lumin Sign templates**, allowing you to prefill merge text tags and form fields, and create a finalized PDF ready for distribution or archiving.
      security:
        - ApiKey: []
        - BearerAuth: []
      tags:
        - Template
      parameters:
        - in: path
          name: template_id
          schema:
            type: string
          required: true
          description: ID of the template to generate document from
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateDTO'
            example:
              default:
                template_id: sign_123
                tags:
                  ClientName: ACME Corp
                  EffectiveDate: 2025-01-01
                fields:
                  CustomerName: John Doe
                  AgreeToTerms: true
                document_name: Mutual NDA
      responses:
        '200':
          description: Successfully generated document from template
          content:
            application/json:
              schema:
                type: object
                required:
                  - document_name
                  - signed_url
                  - expires_at
                properties:
                  document_name:
                    type: string
                    description: Name of the generated document (from input or default).
                  signed_url:
                    type: string
                    format: uri
                    description: Signed HTTPS URL to download the generated document. Expires in 30 minutes.
                  expires_at:
                    type: integer
                    format: unix-epoch
                    description: Unix epoch timestamp **in seconds** when the signed URL expires.
              example:
                document_name: Mutual NDA
                document_url: https://files.luminpdf.com/download/nda-acmecorp-abc123.pdf?expires=2025-08-24T10:45:00Z
                expires_at: 1757219429466
            application/pdf:
              schema:
                type: string
                format: binary
        '4xx':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-API-Key
      description: >
        Provide your API key in the `Authorization` header, e.g., `Authorization: API-key`.
    BearerAuth:
      type: http
      scheme: bearer
      description: >
        Provide your token in the `Authorization` header, e.g., `Authorization: Bearer JWT`.
  schemas:
    Signer:
      type: object
      required:
        - email_address
        - name
      properties:
        email_address:
          type: string
        name:
          type: string
        group:
          type: number
          description: The signing order of signer for the Signature Request with `signing_type` is `ORDER`.
    Viewer:
      type: object
      required:
        - email_address
        - name
      properties:
        email_address:
          type: string
        name:
          type: string
    SignatureRequest:
      type: object
      required:
        - signature_request_id
        - title
        - created_at
        - expires_at
        - details_url
        - status
        - signers
        - signing_type
      properties:
        signature_request_id:
          type: string
          description: The unique identifier for the Signature Request.
        title:
          type: string
          description: The title of the Signature Request.
        created_at:
          type: string
          description: The time the Signature Request was created.
        updated_at:
          type: string
          description: The time the Signature Request was last updated.
        expires_at:
          type: string
          description: The time the Signature Request will expire.
        details_url:
          type: string
          description: The url to view the Signature Request in the browser.
        status:
          type: string
          description: The status of the Signature Request.
          enum:
            - NEED_TO_SIGN
            - WAITING_FOR_OTHERS
            - APPROVED
            - REJECTED
            - WAITING_FOR_PROCESSING
            - FAILED
            - CANCELLED
        reason:
          type: string
          description: The reason for the status FAILED or REJECTED of the Signature Request.
        signing_type:
          type: string
          description: Recipient signing flow.
          enum:
            - SAME_TIME
            - ORDER
        signers:
          type: array
          items:
            required:
              - email_address
              - name
              - is_approved
              - status
            allOf:
              - $ref: '#/components/schemas/Signer'
              - properties:
                  is_approved:
                    type: boolean
                    description: Whether the Signer has approved the Signature Request.
                  status:
                    type: string
                    description: The status of the Signer.
                    enum:
                      - NEED_TO_SIGN
                      - APPROVED
                      - REJECTED
                      - WAITING_FOR_OTHERS
          description: The Signers of the Signature Request.
    User:
      type: object
      required:
        - email
        - id
        - name
      properties:
        id:
          type: string
        email:
          type: string
        name:
          type: string
    SignatureRequestDTO:
      type: object
      required:
        - signers
        - title
        - expires_at
      properties:
        file_url:
          type: string
          description: The URL of a single file to be downloaded and signed. This field is mutually exclusive with `file`, `files`, and `file_urls`. Only one of these fields should be provided in the request.
        file:
          type: string
          format: binary
          description:  A single uploaded file to be sent for signature. This field is mutually exclusive with `file_url`, `files`, and `file_urls`. Only one of these fields should be provided in the request.
        file_urls:
          type: array
          description: An array of URLs of files to be downloaded and signed. This field is mutually exclusive with `file`, `files`, and `file_url`. Only one of these fields should be provided in the request.
          items:
            type: string
        files:
          type: array
          description: An array of uploaded files to be sent for signature. This field is mutually exclusive with `file`, `file_url`, and `file_urls`. Only one of these fields should be provided in the request.
          items:
            type: binary
        signers:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Signer'
              - properties:
                  group:
                    type: number
                    description: |
                      The signing order of signer for the Signature Request with `signing_type` is `ORDER`. Required if `signing_type` is `ORDER`.

                      Only signers in `1st Signers` group will receive email/notification, signers in subsequent groups will receive email/notification when all signers in previous group has signed.

                      Group starts incrementing at 1.

                       The default value for group always is 1 if `signing_type` is `SAME_TIME.`
          description: Add Signers to your Signature Request.
        viewers:
          type: array
          items:
            $ref: '#/components/schemas/Viewer'
          description: Add Viewers to your Signature Request.
        title:
          type: string
          minLength: 1
          maxLength: 255
          description: The title you want to give the Signature Request.
        expires_at:
          type: integer
          format: unix-epoch
          description: When the Signature Request will expire. This is a unix epoch timestamp (miliseconds). Should be later than today.
        use_text_tags:
          type: boolean
          description: Set to `true` to enable Text Tag parsing in your document. Your Text Tags will be converted into UI components for the user to interact with. Defaults to `false`.
        signing_type:
          type: string
          description: The signing order for the Signature Request. Defaults to `SAME_TIME`.
          enum:
            - SAME_TIME
            - ORDER
        custom_email:
          type: object
          description: Custom email content for the email sent to signers.
          properties:
            sender_email:
              type: string
              description: The email address of the sender.
            subject_name:
              type: string
              description: The subject of the email.
            title:
              type: string
              description: The title of the email.
      example:
        file_url: https://lumin-assets-production.s3.us-east-1.amazonaws.com/api-demo/Direct+Debit+form.pdf
        title: Financial Year-End Report Authorization
        signers:
          - email_address: tuyen_ptt@luminpdf.com
            name: Tuyen Phan
            group: 1
          - email_address: son_lt@luminpdf.com
            name: Thi Son
            group: 2
        viewers:
          - email_address: tin_tt@luminpdf.com
            name: Tezca Tin
          - email_address: bac_pth@luminpdf.com
            name: Bac Pham
          - email_address: hau_lt@luminpdf.com
            name: Holly Hau

        expires_at: 1927510980694
        use_text_tags: false
        signing_type: ORDER
    TemplateDTO:
      type: object
      required:
        - template_id
      properties:
        tags:
          type: object
          items:
            type: object
          description: |
            Key–value pairs for **Merge Text Tags** defined in the template.
            Keys must match tag names. Values replace those tags in the generated document.
            Currently supports merge tags with syntax: `[text-merge|req|sender|object.field]`.
        fields:
          type: object
          items:
            type: object
          description: |
            Key–value pairs for **Form Fields** defined in the template.
            Keys must match field names. Values prefill the corresponding fields.
        document_name:
          type: string
          description: Optional custom name for the generated document. Defaults to the template's name if omitted.
      description: |
        At least one of `tags` or `fields` may be required when the template defines required tags/fields.
    Template:
      type: object
      required:
        - template_id
        - name
        - tags
        - fields
        - created_at
        - updated_at
      properties:
        template_id:
          type: string
          description: The unique identifier for the template.
        name:
          type: string
          description: The name of the template.
        signing_type:
          allOf:
            - $ref: '#/components/schemas/SignatureRequest/properties/signing_type'
            - description: Recipient signing flow.
        signer_roles:
          type: array
          description: Signer roles defined in the template.
          items:
            type: object
            properties:
              name:
                type: string
                description: The name of the signer role.
              group:
                type: integer
                description: The signing order of signer for the Signature Request with `signing_type` is `ORDER`.
        tags:
          type: array
          description: Text Tags embedded in the template, which are placeholders added directly in the document using the syntax `[text-merge|req|sender|object.field]`.
          items:
            type: object
            properties:
              name:
                type: string
                description: The name/label of the tag.
              type:
                type: string
                description: The type of the text tag.
                enum: [text-merge, merge_tag]
              is_required:
                type: boolean
                description: Whether the tag must be filled before completing the document.
        fields:
          type: array
          description: Form fields defined in the template.
          items:
            type: object
            properties:
              name:
                type: string
                description: The name/label of the form field.
              type:
                type: string
                description: The type of the form field.
                enum: [text, checkbox, signature, radio_button]
              is_required:
                type: boolean
                description: Whether the form field must be filled before completing the document.
        created_at:
          type: string
          description: The time the template was created.
        updated_at:
          type: string
          description: The time the template was last updated.
    TemplateListResponse:
      type: object
      properties:
        page:
          type: integer
          description: The page number of the dataset.
        limit:
          type: integer
          description: The number of templates to return per page.
        total_count:
          type: integer
          description: The total number of templates.
        data:
          type: array
          items:
            $ref: "#/components/schemas/Template"
    Error:
      type: object
      required:
        - error_code
        - error_message
      properties:
        error_code:
          type: string
        error_message:
          type: string
