"use strict";(self.webpackChunkluminsign=self.webpackChunkluminsign||[]).push([[8726],{39086:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var i=n(74848),s=n(28453);const r={},a="Generate Document from Template",d={type:"api",id:"generate-document-from-template",title:"Generate Document from Template",description:"",slug:"/generate-document-from-template",frontMatter:{},api:{description:"Generates a downloadable PDF document from a specified Lumin template.\n\nThis endpoint takes an existing template identified by `template_id` and produces a static document based on its content and structure.  \n\nCurrently, this operation supports **Lumin Sign templates**, allowing you to prefill merge text tags and form fields, and create a finalized PDF ready for distribution or archiving.\n",security:[{ApiKey:[]},{BearerAuth:[]}],tags:["Template"],parameters:[{in:"path",name:"template_id",schema:{type:"string"},required:!0,description:"ID of the template to generate document from"}],requestBody:{content:{"application/json":{schema:{type:"object",required:["template_id"],properties:{tags:{type:"object",items:{type:"object"},description:"Key\u2013value pairs for **Merge Text Tags** defined in the template.\nKeys must match tag names. Values replace those tags in the generated document.\nCurrently supports merge tags with syntax: `[text-merge|req|sender|object.field]`.\n"},fields:{type:"object",items:{type:"object"},description:"Key\u2013value pairs for **Form Fields** defined in the template.\nKeys must match field names. Values prefill the corresponding fields.\n"},document_name:{type:"string",description:"Optional custom name for the generated document. Defaults to the template's name if omitted."}},description:"At least one of `tags` or `fields` may be required when the template defines required tags/fields.\n"},example:{default:{template_id:"sign_123",tags:{ClientName:"ACME Corp",EffectiveDate:"2025-01-01T00:00:00.000Z"},fields:{CustomerName:"John Doe",AgreeToTerms:!0},document_name:"Mutual NDA"}}}}},responses:{200:{description:"Successfully generated document from template",content:{"application/json":{schema:{type:"object",required:["document_name","signed_url","expires_at"],properties:{document_name:{type:"string",description:"Name of the generated document (from input or default)."},signed_url:{type:"string",format:"uri",description:"Signed HTTPS URL to download the generated document. Expires in 30 minutes."},expires_at:{type:"integer",format:"unix-epoch",description:"Unix epoch timestamp **in seconds** when the signed URL expires."}}},example:{document_name:"Mutual NDA",document_url:"https://files.luminpdf.com/download/nda-acmecorp-abc123.pdf?expires=2025-08-24T10:45:00Z",expires_at:1757219429466}},"application/pdf":{schema:{type:"string",format:"binary"}}}},"4xx":{description:"Unexpected error",content:{"application/json":{schema:{type:"object",required:["error_code","error_message"],properties:{error_code:{type:"string"},error_message:{type:"string"}}}}}}},method:"post",path:"/templates/{template_id}/generate-document",servers:[{url:"https://api.luminpdf.com/v1",description:"Production server"},{url:"https://api-sandbox.luminpdf.com/v1",description:"Sandbox server"}],securitySchemes:{ApiKey:{type:"apiKey",name:"X-API-KEY",in:"header",description:"Provide your API key in the `Authorization` header, e.g., `Authorization: API-key`.\n"},BearerAuth:{type:"http",scheme:"bearer",bearerFormat:"JWT"}},jsonRequestBodyExample:{tags:{},fields:{},document_name:"string"},info:{version:"1.0.0",title:"Lumin API Reference",description:"The Lumin API Reference provides a comprehensive set of tools to integrate document workflows \u2014 including editing, eSignatures, and automation \u2014 into your applications.\n\nUseful links:\n- [Document Repository](https://github.com/luminpdf/luminsign-docs)\n- [API Definition](https://github.com/luminpdf/luminsign-docs/blob/main/openapi.yaml)\n- [Authentication Guide](/docs/api/authentication/)\n",termsOfService:"https://www.luminpdf.com/terms-of-use/",contact:{name:"API Support",email:"integration@luminpdf.com",url:"https://help.luminpdf.com"}},postman:{name:"Generate Document from Template",description:{content:"Generates a downloadable PDF document from a specified Lumin template.\n\nThis endpoint takes an existing template identified by `template_id` and produces a static document based on its content and structure.  \n\nCurrently, this operation supports **Lumin Sign templates**, allowing you to prefill merge text tags and form fields, and create a finalized PDF ready for distribution or archiving.\n",type:"text/plain"},url:{path:["templates",":template_id","generate-document"],host:["{{baseUrl}}"],query:[],variable:[{description:{content:"(Required) ID of the template to generate document from",type:"text/plain"},type:"any",value:"<string>",key:"template_id"}]},header:[{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'{\n    "tags": "<object>",\n    "fields": "<object>",\n    "document_name": "<string>"\n}'},auth:{type:"bearer",bearer:[{type:"any",value:"<Bearer Token>",key:"token"}]}}},source:"@site/openapi.yaml",sourceDirName:".",permalink:"/api/generate-document-from-template",previous:{title:"List Templates",permalink:"/api/list-templates"}},o=[];function l(e){const t={code:"code",h1:"h1",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"generate-document-from-template",children:"Generate Document from Template"}),"\n",(0,i.jsx)(t.p,{children:"Generates a downloadable PDF document from a specified Lumin template."}),"\n",(0,i.jsxs)(t.p,{children:["This endpoint takes an existing template identified by ",(0,i.jsx)(t.code,{children:"template_id"})," and produces a static document based on its content and structure."]}),"\n",(0,i.jsxs)(t.p,{children:["Currently, this operation supports ",(0,i.jsx)(t.strong,{children:"Lumin Sign templates"}),", allowing you to prefill merge text tags and form fields, and create a finalized PDF ready for distribution or archiving."]}),"\n",(0,i.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsx)("th",{style:{textAlign:"left"},children:"Path Parameters"})})}),(0,i.jsx)("tbody",{children:(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"template_id"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"},children:" REQUIRED"}),(0,i.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)(t.p,{children:"ID of the template to generate document from"})})]})})})]}),"\n",(0,i.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsxs)("th",{style:{textAlign:"left"},children:[(0,i.jsx)("span",{children:"Request Body "}),(0,i.jsx)("div",{})]})})}),(0,i.jsxs)("tbody",{children:[(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"tags"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" object[]"}),(0,i.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,i.jsxs)(t.p,{children:["Key\u2013value pairs for ",(0,i.jsx)(t.strong,{children:"Merge Text Tags"})," defined in the template.\nKeys must match tag names. Values replace those tags in the generated document.\nCurrently supports merge tags with syntax: ",(0,i.jsx)(t.code,{children:"[text-merge|req|sender|object.field]"}),"."]})})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"fields"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" object[]"}),(0,i.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,i.jsxs)(t.p,{children:["Key\u2013value pairs for ",(0,i.jsx)(t.strong,{children:"Form Fields"})," defined in the template.\nKeys must match field names. Values prefill the corresponding fields."]})})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"document_name"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,i.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)(t.p,{children:"Optional custom name for the generated document. Defaults to the template's name if omitted."})})]})})]})]}),"\n",(0,i.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsx)("th",{style:{textAlign:"left"},children:"Responses"})})}),(0,i.jsxs)("tbody",{children:[(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsxs)("div",{style:{display:"flex"},children:[(0,i.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)("code",{children:"200"})}),(0,i.jsx)("div",{children:(0,i.jsx)(t.p,{children:"Successfully generated document from template"})})]}),(0,i.jsx)("div",{children:(0,i.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsxs)("th",{style:{textAlign:"left"},children:[(0,i.jsx)("span",{children:"Schema "}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,i.jsx)("div",{})]})})}),(0,i.jsxs)("tbody",{children:[(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"document_name"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,i.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)(t.p,{children:"Name of the generated document (from input or default)."})})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"signed_url"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" uri"}),(0,i.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)(t.p,{children:"Signed HTTPS URL to download the generated document. Expires in 30 minutes."})})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"expires_at"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" unix-epoch"}),(0,i.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,i.jsxs)(t.p,{children:["Unix epoch timestamp ",(0,i.jsx)(t.strong,{children:"in seconds"})," when the signed URL expires."]})})]})})]})]})})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsxs)("div",{style:{display:"flex"},children:[(0,i.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,i.jsx)("code",{children:"4xx"})}),(0,i.jsx)("div",{children:(0,i.jsx)(t.p,{children:"Unexpected error"})})]}),(0,i.jsx)("div",{children:(0,i.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:(0,i.jsxs)("th",{style:{textAlign:"left"},children:[(0,i.jsx)("span",{children:"Schema "}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,i.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,i.jsx)("div",{})]})})}),(0,i.jsxs)("tbody",{children:[(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"error_code"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" string"})]})}),(0,i.jsx)("tr",{children:(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"error_message"}),(0,i.jsx)("span",{style:{opacity:"0.6"},children:" string"})]})})]})]})})]})})]})]})]})}function c(e){void 0===e&&(e={});const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>d});var i=n(96540);const s={},r=i.createContext(s);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);