(self.webpackChunkluminsign=self.webpackChunkluminsign||[]).push([[9943],{84319:(e,t,o)=>{"use strict";o.d(t,{Z:()=>n});var a=o(67294);function n(e){let{children:t,bg:o}=e;return a.createElement("span",{style:{padding:"3px 10px",color:"rgb(255, 255, 255)",backgroundColor:o,lineHeight:"20px",textTransform:"uppercase",boxSizing:"border-box"}},t)}},22469:(e,t,o)=>{"use strict";o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>u,metadata:()=>d,toc:()=>p});var a=o(87462),n=(o(67294),o(3905)),r=o(41574),i=o(9286),s=o(84319);const u={title:"Authorization Code Flow",sidebar_position:1},c=void 0,d={unversionedId:"beta/authorization/get-token/authorization-code",id:"beta/authorization/get-token/authorization-code",title:"Authorization Code Flow",description:"Authorization code flow securely obtains bearer access token and refresh token for your client apps. Your app must be server-side because you must also pass along your application's Client Secret, which must always be kept secure on your server.",source:"@site/docs/beta/authorization/get-token/authorization-code.mdx",sourceDirName:"beta/authorization/get-token",slug:"/beta/authorization/get-token/authorization-code",permalink:"/docs/beta/authorization/get-token/authorization-code",draft:!1,editUrl:"https://github.com/luminpdf/luminsign-docs/blob/main/docs/beta/authorization/get-token/authorization-code.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Authorization Code Flow",sidebar_position:1},sidebar:"betaSidebar",previous:{title:"Getting a Bearer Token",permalink:"/docs/category/getting-a-bearer-token"},next:{title:"Implicit Flow",permalink:"/docs/beta/authorization/get-token/implicit"}},l={},p=[{value:"Get an authorization code",id:"get-an-authorization-code",level:2},{value:"Query parameters:",id:"query-parameters",level:4},{value:"Get bearer access token and refresh token with authorization code",id:"get-bearer-access-token-and-refresh-token-with-authorization-code",level:2}],h={toc:p},k="wrapper";function m(e){let{components:t,...o}=e;return(0,n.kt)(k,(0,a.Z)({},h,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Authorization code flow securely obtains bearer access token and refresh token for your client apps. Your app must be server-side because you must also pass along your application's Client Secret, which must always be kept secure on your server."),(0,n.kt)("h2",{id:"get-an-authorization-code"},"Get an authorization code"),(0,n.kt)("p",null,"The client app makes an authorization request by redirecting user to a page with an authorization proposal."),(0,n.kt)(i.Z,{mdxType:"CodeBlock"},(0,n.kt)(s.Z,{bg:"rgb(47, 129, 50)",mdxType:"Badge"},"GET")," ","https://kratos-auth-test.luminpdf.com/oauth2/auth?client_id=YOUR_CLIENT_ID&response_type=code&redirect_uri=YOUR_REDIRECT_URI&scope=openid bananasign:document.create&state=5a7a4c98-40e2-4e2a-a0d5-979fb639b5b5&nonce=11101998"),(0,n.kt)("h4",{id:"query-parameters"},"Query parameters:"),(0,n.kt)(r.Z,{id:"oauth2-yml",pointer:"#/components/schemas/AuthorizationCode",mdxType:"ApiSchema"}),(0,n.kt)("h2",{id:"get-bearer-access-token-and-refresh-token-with-authorization-code"},"Get bearer access token and refresh token with authorization code"),(0,n.kt)("p",null,"Fetch a new authentication token from the Lumin PDF Authentication servers:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"curl --request POST \\\n  --url https://kratos-auth-test.luminpdf.com/oauth2/token \\\n  -d 'grant_type=authorization_code' \\\n  -d 'code=$YOUR_AUTHORIZATION_CODE' \\\n  -d 'client_id=$YOUR_CLIENT_ID' \\\n  -d 'client_secret=$YOUR_CLIENT_SECRET' \\\n  -d 'redirect_uri=$YOUR_REDIRECT_URI' \\\n  --header 'Content-Type: application/x-www-form-urlencoded'\n")),(0,n.kt)("p",null,"You can now make requests to the Lumin Sign API with bearer token:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"curl --request GET \\\n  --url https://app-auth-staging.bananasign.co/api/web/oauth2/version \\\n  --header 'Authorization: Bearer $access_token' \\\n  --header 'Content-Type: application/json'\n")))}m.isMDXComponent=!0},26242:()=>{},11314:()=>{},67251:()=>{},99018:()=>{},43044:()=>{},3408:()=>{},52100:()=>{}}]);